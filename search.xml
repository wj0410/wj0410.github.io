<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mac安装激活Typora</title>
    <url>/2024/11/03/Mac%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BBTypora/</url>
    <content><![CDATA[<p>原文链接：<a class="link"   href="https://blog.csdn.net/Mimo_YY/article/details/138667265" >PicGo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>PicGo使用GitHub图床</title>
    <url>/2024/11/03/PicGo%E4%BD%BF%E7%94%A8GitHub%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<p>文档地址：<a class="link"   href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A" >PicGo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Hexo搭建个人博客</title>
    <url>/2024/11/03/%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h4 id="预备工作"><a href="#预备工作" class="headerlink" title="预备工作"></a>预备工作</h4><p>首先安装 Node.js、npm、git工具。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; node -v</span><br><span class="line">v12.22.9</span><br><span class="line">&gt; npm -v</span><br><span class="line">8.5.1</span><br><span class="line">&gt; git version</span><br><span class="line">git version 2.34.1</span><br></pre></td></tr></table></figure></div>

<h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">&gt; hexo -v</span><br><span class="line">hexo-cli: 4.3.2</span><br><span class="line">os: darwin 22.6.0 13.6.7</span><br><span class="line"></span><br><span class="line">node: 20.8.1</span><br><span class="line">acorn: 8.10.0</span><br><span class="line">ada: 2.6.0</span><br><span class="line">ares: 1.19.1</span><br><span class="line"><span class="built_in">base64</span>: 0.5.0</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">cjs_module_lexer: 1.2.2</span><br><span class="line">cldr: 43.1</span><br><span class="line">icu: 73.2</span><br><span class="line">llhttp: 8.1.1</span><br><span class="line">modules: 115</span><br><span class="line">napi: 9</span><br><span class="line">nghttp2: 1.57.0</span><br><span class="line">nghttp3: 0.7.0</span><br><span class="line">ngtcp2: 0.8.1</span><br><span class="line">openssl: 3.0.10+quic</span><br><span class="line">simdutf: 3.2.17</span><br><span class="line">tz: 2023c</span><br><span class="line">undici: 5.26.3</span><br><span class="line">unicode: 15.0</span><br><span class="line">uv: 1.46.0</span><br><span class="line">uvwasi: 0.0.18</span><br><span class="line">v8: 11.3.244.8-node.16</span><br><span class="line">zlib: 1.2.13.1-motley</span><br></pre></td></tr></table></figure></div>

<h4 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h4><p>首先创建博客的根目录文件夹</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; <span class="built_in">mkdir</span> MyBlob</span><br><span class="line">&gt; <span class="built_in">cd</span> MyBlob</span><br></pre></td></tr></table></figure></div>

<p>之后，就可以初始化这个文件夹了，初始化的目的是，它会创建一个 helloword.md 文件，然后利用 node.js 等将这个 markdown 文件渲染成一个 html 文件，然后在本地开启一个网络服务器以供前端访问</p>
<p>由于网络问题（npm 的服务器位于国外下载慢）可以使用 cnpm（淘宝团队做的国内镜像）的获取镜像或者直接修改 npm 的资源获取地址为国内的。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装cnmp</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接修改npm资源获取地址（推荐）</span></span><br><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo init</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure></div>

<p>成功初始化后，会在当前文件夹下生成一些文件，目录结构如下</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411032253551.png"
                     
                ></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">├── _config.landscape.yml：主题配置文件，如果</span><br><span class="line"></span><br><span class="line">├── _config.yml：站点配置文件，对站点进行配置。</span><br><span class="line"></span><br><span class="line">├── node_modules：用来存储已安装的各类依赖包。</span><br><span class="line"></span><br><span class="line">├── package-lock.json：包版本依赖锁文件。</span><br><span class="line"></span><br><span class="line">├── package.json：应用数据，Hexo的版本以及相关依赖包的版本等。</span><br><span class="line"></span><br><span class="line">├── scaffolds：博客模版文件夹，包含page.md，post.md，draft.md三种。</span><br><span class="line"></span><br><span class="line">├── source：资源文件夹，存放静态资源如博客md文件、图片等。</span><br><span class="line"></span><br><span class="line">└── themes：主题文件夹，Hexo通过将网站内容与主题组合来生成静态网站。</span><br></pre></td></tr></table></figure></div>

<p>初始化项目后，我们只需在根目录下本地执行下面命令即可在本地进行预览</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></div>

<p>然后我们访问<code>http://localhost:4000/</code>即可查看网站啦</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411032257329.png"
                     
                ></p>
<h4 id="Hexo基本命令介绍"><a href="#Hexo基本命令介绍" class="headerlink" title="Hexo基本命令介绍"></a>Hexo基本命令介绍</h4><ul>
<li><p><strong>本地启动项目，s 表示 server</strong></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo s</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411032301146.png"
                     
                ></p>
</li>
<li><p><strong>创建一个新的文章</strong></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo new [layout] &lt;title&gt;</span><br><span class="line">如：hexo new <span class="string">&quot;我的第一篇博客 Hexo Hello!&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>layout 表示文章布局，可选（post page draft），默认使用 <code>_config.yml</code>中的 default_layout 参数代替（post）。</p>
<p>title 表示文章标题，如果标题包含空格的话，请使用引号括起来。</p>
</li>
<li><p><strong>Front-matter</strong></p>
<p><a class="link"   href="https://hexo.io/zh-cn/docs/front-matter" >参看官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - Sports</span><br><span class="line">  - Baseball</span><br><span class="line">tags:</span><br><span class="line">  - Injury</span><br><span class="line">  - Fight</span><br><span class="line">  - Shocking</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)</strong></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo clean</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>生成静态文件，g 表示 generate</strong></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo g</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411032304909.png"
                     
                ></p>
</li>
<li><p><strong>部署Hexo网站，d 表示 deploy</strong></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo d</span><br></pre></td></tr></table></figure></div>

<p>更多相关指令可以前往官网查看：<a class="link"   href="https://hexo.io/zh-cn/docs/commands" >https://hexo.io/zh-cn/docs/commands <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
</ul>
<h4 id="Hexo基本配置修改"><a href="#Hexo基本配置修改" class="headerlink" title="Hexo基本配置修改"></a>Hexo基本配置修改</h4><p><strong>【必改部分】</strong> 站点的基本设置，首页标题、子标题、简介、关键词（英文,隔开）、作者、语言和时区，都需要修改，这样才算自己的网站嘛。</p>
<p>打开<code>_config.yml</code>，修改以下部分</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Wangjie&#x27;s</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;知识总结&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;Hexo+Github&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">java</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Wangjie</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure></div>

<p>重启下 Hexo 服务，我们刷新页面，就会发现上面的修改生效啦～如果没有生效，你可以先运行下<code>hexo clean</code>先清除缓存，然后再执行<code>hexo s</code>启动服务器。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411032350227.png"
                     
                ></p>
<p><strong>【选改部分】</strong> </p>
<p>访问路径相关设置</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://example.com</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure></div>

<p>原主题太简陋了，我从官网主题地址：<a class="link"   href="https://xie.infoq.cn/link?target=https://hexo.io/themes/" >https://hexo.io/themes/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>中下载了<code>Redefine</code>主题，所以我们需要将配置中的主题改为<code>redefine</code>，大家也可以选择其他主题。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">redefine</span></span><br></pre></td></tr></table></figure></div>

<h4 id="Redefine主题使用文档"><a href="#Redefine主题使用文档" class="headerlink" title="Redefine主题使用文档"></a><a class="link"   href="https://redefine-docs.ohevan.com/getting-started" >Redefine主题使用文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><blockquote>
<p>[!NOTE]</p>
<p>注意，该主题Hexo 版本需要大于 5.0.0</p>
<p><strong>Hexo版本升级</strong></p>
<p>Hexo版本升级可以通过npm实现，相关命令如下：<br>先全局升级<code>hexo-cli</code>：-g表示全局升级。<code>hexo</code>本身是一个静态博客生成工具，具备编译Markdown、拼接主题模板、生成 HTML、上传 Git 等基本功能。<code>hexo-cli</code>能够将这些功能封装为命令，提供给用户通过<code>hexo server / hexo deploy</code>等命令调用的模块。<code>CLI = Command Line Interface</code>命令行界面。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm i hexo-cli -g</span><br></pre></td></tr></table></figure></div>

<p>然后直接输入：(其实这个命令应该不正确)，输入之后发现出现了一系列的warn。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm update</span><br></pre></td></tr></table></figure></div>

<p>再输入<code>hexo vesion</code>查看当前版本，发现版本已经更新成功了。</p>
</blockquote>
<h4 id="将-Hexo-博客部署到-GitHub"><a href="#将-Hexo-博客部署到-GitHub" class="headerlink" title="将 Hexo 博客部署到 GitHub"></a>将 Hexo 博客部署到 GitHub</h4><p>首先我们先需要新建在 GitHub 上新建一个项目：<a class="link"   href="https://xie.infoq.cn/link?target=https://github.com/new" >https://github.com/new <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，项目名称格式需要注意，必须是<code>用户名.github.io</code>，如下图所示：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411040157011.png"
                     
                ></p>
<p>同时我们需要配置下 SSH 密钥，具体配置方法可以查看：<a class="link"   href="https://xie.infoq.cn/link?target=https://mp.weixin.qq.com/s/kRjdSH-o8xULo8iiUyyhgw" >mac 如何快速生成SSH key，配置github SSH公钥连接(解决git push 413问题 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>接着我们要修改下配置文件<code>_config.yml</code>，下滑到最后，将部署信息改为：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span>  </span><br><span class="line">	<span class="attr">type:</span> <span class="string">git</span>  </span><br><span class="line">	<span class="attr">repo:</span> <span class="string">git@github.com:你的用户名/你的用户名.github.io.git</span>  </span><br><span class="line">	<span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411040200907.png"
                     
                ></p>
<p>部署到 GitHub，需要安装相关工具 hexo-deployer-git。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></div>

<p>接下来直接输入指令配置就行了，<code>hexo clean</code>清除缓存数据，<code>hexo g</code>生成相关静态文件。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo clean</span><br><span class="line">&gt; hexo g</span><br></pre></td></tr></table></figure></div>

<p>如果继续输入<code>hexo d</code>进行部署的时候，可能会报错，<code>Deployer not found: git</code> ，这个时候不要慌，这是因为在本地 Hexo 项目目录还没有初始化 git 造成的，我们运行下面命令进行初始化即可。如果没有报错则忽视。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; git init</span><br></pre></td></tr></table></figure></div>

<p>我们再次输入<code>hexo d</code>进行部署即可，可能会要求输入 GitHub 账号和密码（配置了 ssh 公钥就不需要了，上面有说如何配置），直接输入即可，上传完成后，再刷新 GitHub 页面会发现多了一些文件，原来的 readme 也不见了，这是因为 Hexo 每次部署都会将<code>hexo g</code>生成的静态文件（在 blog&#x2F;public 目录下）上传到 GitHub，<strong>并覆盖原先所有的内容</strong>。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411040209477.png"
                     
                ></p>
<p>这个时候，我们在浏览器内访问</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://&lt;你的用户名&gt;.github.io/</span><br><span class="line"># 如：https://wj0410.github.io/</span><br></pre></td></tr></table></figure></div>

<p>即可访问我们的博客首页啦，点击博客也可以进入对应的博客页面。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411040212042.png"
                     
                ></p>
<p>通过上面，我们已经得到了一个在线的、可以随时随地访问的个人博客，整个操作过程还是很简单的，麻烦的就是上传更新文章和部署项目了，每次部署都需要输入账号密码，另外由于 GitHub 服务器在国外，国内访问速度也很堪忧，不用担心，这个解决还比较简单，我们可以同时将项目部署到国内码云：<a class="link"   href="https://xie.infoq.cn/link?target=https://gitee.com/" >https://gitee.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>或者 Coding：<a class="link"   href="https://xie.infoq.cn/link?target=https://coding.net/" >https://coding.net/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，整个过程和将项目部署到 GitHub 差不多。</p>
<h4 id="设置应用自己的域名"><a href="#设置应用自己的域名" class="headerlink" title="设置应用自己的域名"></a>设置应用自己的域名</h4><p>如果你有域名的话，还可以设置专属域名，比如我之前在<a class="link"   href="https://xie.infoq.cn/link?target=https://www.aliyun.com/minisite/goods?taskPkg=1111ydsrwb&pkgSid=588&recordId=952736&userCode=g49jjzzx" >阿里云买的域名点击查看 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，当然大家也可以买<a class="link"   href="https://xie.infoq.cn/link?target=https://curl.qcloud.com/jaJqULOo" >腾讯云的点击查看 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，国内比较靠谱的两个云服务器和域名服务公司了～</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411040215023.png"
                     
                ></p>
<p>首先我们需要在阿里云域名管理后台，进行域名解析，我们直接从我们自己的域名解析到博客的 github 地址，谈及一条 CNAME 记录即可，主机记录就是我们后面通过什么链接访问，记录值就是 github 访问地址了。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411040216584.png"
                     
                ></p>
<p>然后我们需要到 GitHub 对应项目中设置项目的域名，进入项目-&gt; Settings -&gt; Pages -&gt; <code>Custom domain</code>，将我们设置的 CNAME 域名写入即可（注意是在这个项目的设置里，并非 GitHub 的设置）。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411040218672.png"
                     
                ></p>
<p>最后我们还需要在本地项目中的 blog&#x2F;source 文件夹下新建一个<code>CNAME</code>文件，编辑写入我们的域名，就是刚刚填入 GitHub 的，这样后面 GitHub 就能映射到我们的域名啦。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/wj0410/pic-bed/master/202411040219142.png"
                     
                ></p>
<p>再执行下面命令，重新更新和部署项目</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; hexo g</span><br><span class="line">&gt; hexo d</span><br></pre></td></tr></table></figure></div>

<p>部署成功后，我们直接访问<code>https://blog.python-brief.com/</code>（我自定义的域名）来查看我们的博客啦～</p>
<h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><p><a class="link"   href="https://xie.infoq.cn/article/90dc08c57463df3a1b2ad960f" >https://xie.infoq.cn/article/90dc08c57463df3a1b2ad960f <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://blog.csdn.net/m0_73651896/article/details/140237281" >https://blog.csdn.net/m0_73651896/article/details/140237281 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
</search>
